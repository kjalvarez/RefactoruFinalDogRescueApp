0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'install', '-g', 'nodemon' ]
2 info using npm@1.4.3
3 info using node@v0.10.26
4 verbose cache add [ 'nodemon', null ]
5 verbose cache add name=undefined spec="nodemon" args=["nodemon",null]
6 verbose parsed url { protocol: null,
6 verbose parsed url   slashes: null,
6 verbose parsed url   auth: null,
6 verbose parsed url   host: null,
6 verbose parsed url   port: null,
6 verbose parsed url   hostname: null,
6 verbose parsed url   hash: null,
6 verbose parsed url   search: null,
6 verbose parsed url   query: null,
6 verbose parsed url   pathname: 'nodemon',
6 verbose parsed url   path: 'nodemon',
6 verbose parsed url   href: 'nodemon' }
7 silly lockFile 1625b929-nodemon nodemon
8 verbose lock nodemon /Users/karin/.npm/1625b929-nodemon.lock
9 silly lockFile 1625b929-nodemon nodemon
10 silly lockFile 1625b929-nodemon nodemon
11 verbose addNamed [ 'nodemon', '' ]
12 verbose addNamed [ null, '*' ]
13 silly lockFile 4f5e51c6-nodemon nodemon@
14 verbose lock nodemon@ /Users/karin/.npm/4f5e51c6-nodemon.lock
15 silly addNameRange { name: 'nodemon', range: '*', hasData: false }
16 verbose url raw nodemon
17 verbose url resolving [ 'https://registry.npmjs.org/', './nodemon' ]
18 verbose url resolved https://registry.npmjs.org/nodemon
19 info trying registry request attempt 1 at 22:04:12
20 verbose etag "9DQJ2XOPMOPKKA9Y5K4IZ9MPC"
21 http GET https://registry.npmjs.org/nodemon
22 http 304 https://registry.npmjs.org/nodemon
23 silly registry.get cb [ 304,
23 silly registry.get   { date: 'Fri, 14 Mar 2014 04:04:13 GMT',
23 silly registry.get     server: 'Apache',
23 silly registry.get     via: '1.1 varnish',
23 silly registry.get     'last-modified': 'Fri, 14 Mar 2014 04:04:14 GMT',
23 silly registry.get     'cache-control': 'max-age=1',
23 silly registry.get     etag: '"9DQJ2XOPMOPKKA9Y5K4IZ9MPC"',
23 silly registry.get     'x-served-by': 'cache-d45-DAL',
23 silly registry.get     'x-cache': 'HIT',
23 silly registry.get     'x-cache-hits': '1',
23 silly registry.get     'x-timer': 'S1394769853.827286720,VS0,VE456',
23 silly registry.get     vary: 'Accept',
23 silly registry.get     'content-length': '0',
23 silly registry.get     'keep-alive': 'timeout=10, max=50',
23 silly registry.get     connection: 'Keep-Alive' } ]
24 verbose etag nodemon from cache
25 silly addNameRange number 2 { name: 'nodemon', range: '*', hasData: true }
26 silly addNameRange versions [ 'nodemon',
26 silly addNameRange   [ '0.1.4',
26 silly addNameRange     '0.1.5',
26 silly addNameRange     '0.1.6',
26 silly addNameRange     '0.1.7',
26 silly addNameRange     '0.1.8',
26 silly addNameRange     '0.2.0',
26 silly addNameRange     '0.2.1',
26 silly addNameRange     '0.2.2',
26 silly addNameRange     '0.3.0',
26 silly addNameRange     '0.3.1',
26 silly addNameRange     '0.3.2',
26 silly addNameRange     '0.4.0',
26 silly addNameRange     '0.4.1',
26 silly addNameRange     '0.5.0',
26 silly addNameRange     '0.5.1',
26 silly addNameRange     '0.5.2',
26 silly addNameRange     '0.5.3',
26 silly addNameRange     '0.5.4',
26 silly addNameRange     '0.5.5',
26 silly addNameRange     '0.5.6',
26 silly addNameRange     '0.5.7',
26 silly addNameRange     '0.6.0',
26 silly addNameRange     '0.6.1',
26 silly addNameRange     '0.6.2',
26 silly addNameRange     '0.6.3',
26 silly addNameRange     '0.6.4',
26 silly addNameRange     '0.6.5',
26 silly addNameRange     '0.6.6',
26 silly addNameRange     '0.6.7',
26 silly addNameRange     '0.6.8',
26 silly addNameRange     '0.6.9',
26 silly addNameRange     '0.6.10',
26 silly addNameRange     '0.6.11',
26 silly addNameRange     '0.6.12',
26 silly addNameRange     '0.6.13',
26 silly addNameRange     '0.6.14',
26 silly addNameRange     '0.6.15',
26 silly addNameRange     '0.6.16',
26 silly addNameRange     '0.6.17',
26 silly addNameRange     '0.6.18',
26 silly addNameRange     '0.6.19',
26 silly addNameRange     '0.6.20',
26 silly addNameRange     '0.6.21',
26 silly addNameRange     '0.6.22',
26 silly addNameRange     '0.6.23',
26 silly addNameRange     '0.7.0',
26 silly addNameRange     '0.7.1',
26 silly addNameRange     '0.7.2',
26 silly addNameRange     '0.7.3',
26 silly addNameRange     '0.7.4',
26 silly addNameRange     '0.7.5',
26 silly addNameRange     '0.7.6',
26 silly addNameRange     '0.7.7',
26 silly addNameRange     '0.7.8',
26 silly addNameRange     '0.7.10',
26 silly addNameRange     '0.9.0',
26 silly addNameRange     '0.9.1',
26 silly addNameRange     '0.9.2',
26 silly addNameRange     '0.9.3',
26 silly addNameRange     '0.9.5',
26 silly addNameRange     '0.9.6',
26 silly addNameRange     '0.9.7',
26 silly addNameRange     '0.9.10',
26 silly addNameRange     '0.9.11',
26 silly addNameRange     '0.9.12',
26 silly addNameRange     '0.9.14',
26 silly addNameRange     '0.9.16',
26 silly addNameRange     '0.9.17',
26 silly addNameRange     '1.0.0',
26 silly addNameRange     '1.0.1',
26 silly addNameRange     '1.0.2',
26 silly addNameRange     '1.0.2-rc',
26 silly addNameRange     '0.6.10-a',
26 silly addNameRange     '1.0.2-rc3',
26 silly addNameRange     '1.0.2-rc4',
26 silly addNameRange     '1.0.3',
26 silly addNameRange     '1.0.4',
26 silly addNameRange     '1.0.5',
26 silly addNameRange     '1.0.6',
26 silly addNameRange     '1.0.7',
26 silly addNameRange     '1.0.8',
26 silly addNameRange     '1.0.9',
26 silly addNameRange     '1.0.10',
26 silly addNameRange     '1.0.11',
26 silly addNameRange     '1.0.12',
26 silly addNameRange     '1.0.13',
26 silly addNameRange     '1.0.14',
26 silly addNameRange     '1.0.15' ] ]
27 verbose addNamed [ 'nodemon', '1.0.15' ]
28 verbose addNamed [ '1.0.15', '1.0.15' ]
29 silly lockFile fdc88aa4-nodemon-1-0-15 nodemon@1.0.15
30 verbose lock nodemon@1.0.15 /Users/karin/.npm/fdc88aa4-nodemon-1-0-15.lock
31 silly lockFile fdc88aa4-nodemon-1-0-15 nodemon@1.0.15
32 silly lockFile fdc88aa4-nodemon-1-0-15 nodemon@1.0.15
33 silly lockFile 4f5e51c6-nodemon nodemon@
34 silly lockFile 4f5e51c6-nodemon nodemon@
35 silly resolved [ { name: 'nodemon',
35 silly resolved     homepage: 'http://nodemon.io',
35 silly resolved     author: { name: 'Remy Sharp', url: 'http://github.com/remy' },
35 silly resolved     bin: { nodemon: './bin/nodemon.js' },
35 silly resolved     repository: { type: 'git', url: 'http://github.com/remy/nodemon.git' },
35 silly resolved     description: 'Simple monitor script for use during development of a node.js app.',
35 silly resolved     keywords:
35 silly resolved      [ 'monitor',
35 silly resolved        'development',
35 silly resolved        'restart',
35 silly resolved        'autoload',
35 silly resolved        'reload',
35 silly resolved        'terminal' ],
35 silly resolved     version: '1.0.15',
35 silly resolved     preferGlobal: 'true',
35 silly resolved     licenses: [ [Object] ],
35 silly resolved     main: './lib/nodemon',
35 silly resolved     scripts:
35 silly resolved      { coverage: 'istanbul cover _mocha -- --timeout 20000 --ui bdd --reporter list test/**/*.test.js',
35 silly resolved        test: 'node_modules/mocha/bin/_mocha --timeout 20000 --ui bdd test/**/*.test.js',
35 silly resolved        web: 'node web' },
35 silly resolved     devDependencies:
35 silly resolved      { connect: '*',
35 silly resolved        mocha: '~1.12.0',
35 silly resolved        should: '~1.2.2',
35 silly resolved        istanbul: '~0.1.44',
35 silly resolved        touch: '0.0.2' },
35 silly resolved     dependencies: { 'update-notifier': '~0.1.7', minimatch: '~0.2.14' },
35 silly resolved     readme: '![nodemon logo](http://nodemon.io/nodemon.png)\n\n# nodemon\n\n[![Flattr this](http://api.flattr.com/button/flattr-badge-large.png)](http://flattr.com/thing/1211372/remynodemon-on-GitHub)\n\nFor use during development of a node.js based application.\n\nnodemon will watch the files in the directory that nodemon was started, and if they change, it will automatically restart your node application.\n\nnodemon does **not** require *any* changes to your code or method of development. nodemon simply wraps your node application and keeps an eye on any files that have changed. Remember that nodemon is a replacement wrapper for `node`, think of it as replacing the word "node" on the command line when you run your script.\n\n[![NPM version](https://badge.fury.io/js/nodemon.png)](http://badge.fury.io/js/nodemon)\n[![Travis Status](https://travis-ci.org/remy/nodemon.png)](https://travis-ci.org/remy/nodemon)\n\n# Installation\n\nEither through forking or by using [npm](http://npmjs.org) (the recommended way):\n\n    npm install -g nodemon\n\nAnd nodemon will be installed in to your bin path. Note that as of npm v1, you must explicitly tell npm to install globally as nodemon is a command line utility.\n\n# Usage\n\nnodemon wraps your application, so you can pass all the arguments you would normally pass to your app:\n\n    nodemon [your node app]\n\nFor example, if my application accepted a host and port as the arguments, I would start it as so:\n\n    nodemon ./server.js localhost 8080\n\nAny output from this script is prefixed with `[nodemon]`, otherwise all output from your application, errors included, will be echoed out as expected.\n\nnodemon also supports running and monitoring [coffee-script](http://jashkenas.github.com/coffee-script/) apps:\n\n    nodemon server.coffee\n\nIf no script is given, nodemon will test for a `package.json` file and if found, will run the file associated with the *main* property ([ref](https://github.com/remy/nodemon/issues/14)).\n\nYou can also pass the debug flag to node through the command line as you would normally:\n\n    nodemon --debug ./server.js 80\n\nIf you have a `package.json` file for your app, you can omit the main script entirely and nodemon will read the `package.json` for the `main` property and use that value as the app.\n\nAlso check out the [FAQ](https://github.com/remy/nodemon/blob/master/faq.md) or [issues](https://github.com/remy/nodemon/issues) for nodemon.\n\n## Automatic re-running\n\nnodemon was original written to restart hanging processes such as web servers, but now supports apps that cleanly exit. If your script exits cleanly, nodemon will continue to monitor the directory (or directories) and restart the script if there are any changes.\n\n## Manual restarting\n\nWhilst nodemon is running, if you need to manually restart your application, instead of stopping and restart nodemon, you can simply type `rs` with a carridge return, and nodemon will restart your process.\n\n## Config files\n\nnodemon supports local and global configuration files. These are named `nodemon.json` and can be located in the current working directory or in your home directory.\n\nThe specificity is as follows, so that a command line argument will always override the config file settings:\n\n- command line arguments\n- local config\n- global config\n\nA config file can take any of the command line arguments as JSON key values, for example:\n\n    {\n      "verbose": true,\n      "ignore": ["*.test.js", "fixtures/*"],\n      "execMap": {\n        "rb": "ruby",\n        "pde": "processing --sketch={{pwd}} --run"\n      }\n    }\n\nThe above `nodemon.json` file might be my global config so that I have support for ruby files and processing files, and I can simply run `nodemon demo.pde` and nodemon will automatically know how to run the script even though out of the box support for processing scripts.\n\nA further example of options can be seen in [sample-nodemon.md](https://github.com/remy/nodemon/blob/master/doc/sample-nodemon.md)\n\n*This section needs better documentation, but for now you can also see `nodemon --help config` ([also here](https://github.com/remy/nodemon/blob/master/doc/cli/config.txt))*.\n\n## Using nodemon as a module\n\nPlease see [doc/requireable.md](doc/requireable.md)\n\n## Running non-node scripts\n\nnodemon can also be used to execute and monitor other programs. nodemon will read the file extension of the script being run and monitor that extension instead of .js if there\'s no .nodemonignore:\n\n    nodemon --exec "python -v" ./app.py\n\nNow nodemon will run `app.py` with python in verbose mode (note that if you\'re not passing args to the exec program, you don\'t need the quotes), and look for new or modified files with the `.py` extension.\n\n### Default executables\n\nUsing the `nodemon.json` config file, you can define your own default executables using the `execMap` property. This is particularly useful if you\'re working with a language that isn\'t supported by default by nodemon.\n\nTo add support for nodemon to know about the .pl extension (for Perl), the nodemon.json file would add:\n\n    {\n      "execMap": {\n         "pl": "perl"\n      }\n    }\n\nNow running the following, nodemon will know to use `perl` as the executable:\n\n    nodemon script.pl\n\nIt\'s generally recommended to use the global `nodemon.json` to add your own `execMap` options. However, if there\'s a common default that\'s missing, this can be merged in to the project so that nodemon supports it by default, by changing [default.js](https://github.com/remy/nodemon/blob/master/lib/config/defaults.js) and sending a pull request.\n\n## Monitoring multiple directories\n\nBy default nodemon monitors the current working directory. If you want to take control of that option, use the `--watch` option to add specific paths:\n\n    nodemon --watch app --watch libs app/server.js\n\nNow nodemon will only restart if there are changes in the `./app` or `./libs` directory. By default nodemon will traverse sub-directories, so there\'s no need in explicitly including sub-directories.\n\n## Specifying extension watch list\n\nBy default, nodemon looks for files with the `.js`, `.coffee`, and `.litcoffee` extensions. If you use the `--exec` option and monitor `app.py` nodemon will monitor files with the extension of `.py`. However, you can specify your own list with the `-e` (or `--ext`) switch like so:\n\n    nodemon -e js,jade\n\nNow nodemon will restart on any changes to files in the directory (or subdirectories) with the extensions .js, .jade.\n\n## Ignoring files\n\nBy default, if nodemon will only restart when a `.js` JavaScript file changes. In some cases you will want to ignore some specific files, directories or file patterns, to prevent nodemon from prematurely restarting your application.\n\nThis can be done via the command line:\n\n    nodemon --ignore lib/ --ignore tests/\n\nOr specific files can be ignored:\n\n    nodemon --ignore lib/app.js\n\nPatterns can also be ignored (but be sure to quote the arguments):\n\n    nodemon --ignore \'lib/*.js\'\n\nNote that by default, nodemon will ignore the `.git` and `node_modules/**/node_modules` directories.\n\n## Delaying restarting\n\nIn some situations, you may want to wait until a number of files have changed. The timeout before checking for new file changes is 1 second. If you\'re uploading a number of files and it\'s taking some number of seconds, this could cause your app to restart multiple time unnecessarily.\n\nTo add an extra throttle, or delay restarting, use the `--delay` command:\n\n    nodemon --delay 10 server.js\n\nFor more precision, milliseconds can be specified.  Either as a float:\n\n    nodemon --delay 2.5 server.js\n\nOr using the time specifier (ms):\n\n    nodemon --delay 2500ms server.js\n\nThe delay figure is number of seconds (or milliseconds, if specified) to delay before restarting. So nodemon will only restart your app the given number of seconds after the *last* file change.\n\n## Controlling shutdown of your script\n\nnodemon sends a kill signal to your application when it sees a file update. If you need to clean up on shutdown inside your script you can capture the kill signal and handle it yourself.\n\nThe following example will listen once for the `SIGUSR2` signal (used by nodemon to restart), run the clean up process and then kill itself for nodemon to continue control:\n\n    process.once(\'SIGUSR2\', function () {\n      gracefulShutdown(function () {\n        process.kill(process.pid, \'SIGUSR2\');\n      })\n    });\n\nNote that the `process.kill` is *only* called once your shutdown jobs are complete. Hat tip to [Benjie Gillam](http://www.benjiegillam.com/2011/08/node-js-clean-restart-and-faster-development-with-nodemon/) for writing this technique up.\n\n## Using nodemon in your gulp workflow\n\nCheck out the [gulp-nodemon](https://github.com/JacksonGariety/gulp-nodemon) plugin to integrate nodemon with the rest of your project\'s gulp workflow.\n\n## Using nodemon in your Grunt workflow\n\nCheck out the [grunt-nodemon](https://github.com/ChrisWren/grunt-nodemon) plugin to integrate nodemon with the rest of your project\'s grunt workflow.\n\n# License\n\nMIT [http://rem.mit-license.org](http://rem.mit-license.org)\n',
35 silly resolved     readmeFilename: 'README.md',
35 silly resolved     bugs: { url: 'https://github.com/remy/nodemon/issues' },
35 silly resolved     _id: 'nodemon@1.0.15',
35 silly resolved     _from: 'nodemon@' } ]
36 info install nodemon@1.0.15 into /usr/local/lib
37 info installOne nodemon@1.0.15
38 info /usr/local/lib/node_modules/nodemon unbuild
39 verbose tar unpack /Users/karin/.npm/nodemon/1.0.15/package.tgz
40 silly lockFile 15c6d46c-r-local-lib-node-modules-nodemon tar:///usr/local/lib/node_modules/nodemon
41 verbose lock tar:///usr/local/lib/node_modules/nodemon /Users/karin/.npm/15c6d46c-r-local-lib-node-modules-nodemon.lock
42 silly lockFile 647826c8-n-npm-nodemon-1-0-15-package-tgz tar:///Users/karin/.npm/nodemon/1.0.15/package.tgz
43 verbose lock tar:///Users/karin/.npm/nodemon/1.0.15/package.tgz /Users/karin/.npm/647826c8-n-npm-nodemon-1-0-15-package-tgz.lock
44 silly gunzTarPerm modes [ '755', '644' ]
45 error Error: EACCES, mkdir '/usr/local/lib/node_modules/nodemon'
45 error  { [Error: EACCES, mkdir '/usr/local/lib/node_modules/nodemon']
45 error   errno: 3,
45 error   code: 'EACCES',
45 error   path: '/usr/local/lib/node_modules/nodemon',
45 error   fstream_type: 'Directory',
45 error   fstream_path: '/usr/local/lib/node_modules/nodemon',
45 error   fstream_class: 'DirWriter',
45 error   fstream_stack:
45 error    [ '/usr/local/lib/node_modules/npm/node_modules/fstream/lib/dir-writer.js:36:23',
45 error      '/usr/local/lib/node_modules/npm/node_modules/mkdirp/index.js:37:53',
45 error      'Object.oncomplete (fs.js:107:15)' ] }
46 error Please try running this command again as root/Administrator.
47 error System Darwin 12.5.0
48 error command "node" "/usr/local/bin/npm" "install" "-g" "nodemon"
49 error cwd /Users/karin/Refactoru Projects/Refactoru-FinalRescueApp
50 error node -v v0.10.26
51 error npm -v 1.4.3
52 error path /usr/local/lib/node_modules/nodemon
53 error fstream_path /usr/local/lib/node_modules/nodemon
54 error fstream_type Directory
55 error fstream_class DirWriter
56 error code EACCES
57 error errno 3
58 error stack Error: EACCES, mkdir '/usr/local/lib/node_modules/nodemon'
59 error fstream_stack /usr/local/lib/node_modules/npm/node_modules/fstream/lib/dir-writer.js:36:23
59 error fstream_stack /usr/local/lib/node_modules/npm/node_modules/mkdirp/index.js:37:53
59 error fstream_stack Object.oncomplete (fs.js:107:15)
60 verbose exit [ 3, true ]
